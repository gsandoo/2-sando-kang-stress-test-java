name: Java CI

on:
  push:
    branches: ["main"]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      # ✅ Git 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      # ✅ 현재 작업 디렉토리 및 파일 확인 (Gradle 파일이 있는지 체크)
      - name: Check Current Directory and Files
        run: |
          echo "📂 현재 작업 디렉토리:"
          pwd
          echo "📄 현재 디렉토리 내 파일 리스트:"
          ls -la
          echo "🔍 Gradle 빌드 관련 파일 확인:"
          ls -la | grep -E "build.gradle|settings.gradle"

      # ✅ JDK 17 설치
      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # ✅ Gradlew 실행 권한 부여
      - name: Grant execute permission to Gradlew
        run: chmod +x ./gradlew

      # ✅ Gradle 빌드 실행 (빌드 로그 출력)
      - name: Build with Gradle Wrapper
        run: |
          echo "🚀 Gradle 빌드 시작"
          ./gradlew clean bootJar
        continue-on-error: false

      # ✅ Docker Hub 로그인
      - name: Login To DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ✅ Docker 이미지 빌드
      - name: Image Build
        env:
          NAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPO: ${{ secrets.DOCKERHUB_REPOSITORY }}
        run: |
          echo "🐳 Docker 이미지 빌드 시작"
          docker build -t $NAME/$REPO:latest .
          echo "✅ Docker 이미지 빌드 완료"

      # ✅ 빌드된 Docker 이미지 확인
      - name: Show Docker Images
        run: |
          echo "📝 현재 로컬에 있는 Docker 이미지:"
          docker images

      # ✅ Docker 이미지 푸시 및 digest 확인
      - name: Push Docker Image
        env:
          NAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPO: ${{ secrets.DOCKERHUB_REPOSITORY }}
        run: |
          echo "🚀 DockerHub로 이미지 푸시 시작"
          docker push $NAME/$REPO:latest
          echo "✅ Docker 이미지 푸시 완료"

          echo "🔍 푸시된 Docker 이미지 digest 확인"
          docker inspect --format='{{index .RepoDigests 0}}' $NAME/$REPO:latest || echo "🚨 이미지 digest 확인 실패"
